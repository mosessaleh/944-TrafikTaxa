{
  "description": "Remove txRef from prisma.cryptoPayment.create to match current Prisma schema",
  "files": [
    {
      "path": "app/api/payments/crypto/confirm/route.ts",
      "content": "import { NextResponse } from \"next/server\";\nimport { getCurrentUser } from \"@/lib/session\";\nimport { prisma } from \"@/lib/db\";\nimport { ConfirmCryptoPaymentSchema } from \"@/lib/validation\";\nimport { notifyAdmin, notifyUserEmail } from \"@/lib/notify\";\n\nexport async function POST(request: Request) {\n  try {\n    const me = await getCurrentUser();\n    if (!me) return NextResponse.json({ error: \"Unauthenticated\" }, { status: 401 });\n\n    const raw = await request.json().catch(() => ({}));\n    const parsed = ConfirmCryptoPaymentSchema.safeParse(raw);\n    if (!parsed.success) {\n      return NextResponse.json({ error: \"Invalid payload\", details: parsed.error.flatten() }, { status: 400 });\n    }\n    const { symbol, walletId, network, address, amountDkk, amountCoin } = parsed.data;\n\n    // Prisma expects string userId\n    const userId = String(me.id);\n\n    const pay = await prisma.cryptoPayment.create({\n      data: {\n        userId,\n        symbol,\n        network,\n        addressId: walletId || null,\n        address,\n        amountDkk: Number(amountDkk),\n        amountCoin: Number(amountCoin),\n        status: \"pending\",\n      },\n    });\n\n    // Notify user (processing ~15 minutes)\n    const subjectUser = \"تم استلام طلب الدفع بالعملات الرقمية\";\n    const htmlUser = `\n      <div style=\"font-family:system-ui,-apple-system,Segoe UI,Roboto\">\n        <h2>طلبك قيد المعالجة</h2>\n        <p>شكرًا لك. استلمنا طلب الدفع بالعملة <b>${symbol.toUpperCase()}</b>.</p>\n        <p>المبلغ: <b>${amountDkk} DKK</b> (~ ${amountCoin} ${symbol.toUpperCase()})</p>\n        <p>نبدأ التحقق الآن، وقد يستغرق ذلك حوالي 15 دقيقة.</p>\n        <p>رقم العملية: <code>${pay.id}</code></p>\n      </div>\n    `;\n    if (me.email) {\n      await notifyUserEmail(me.email, subjectUser, htmlUser).catch(() => {});\n    }\n\n    // Notify admin\n    const subjectAdmin = \"Crypto payment pending verification\";\n    const htmlAdmin = `\n      <div style=\"font-family:system-ui,-apple-system,Segoe UI,Roboto\">\n        <h2>Crypto Payment Pending</h2>\n        <p>User ID: ${userId}${me.email ? ` (${me.email})` : \"\"}</p>\n        <p>Symbol: ${symbol.toUpperCase()} — Network: ${network}</p>\n        <p>Address: ${address}</p>\n        <p>Amount: ${amountDkk} DKK (~ ${amountCoin} ${symbol.toUpperCase()})</p>\n        <p>Payment ID: <code>${pay.id}</code></p>\n      </div>\n    `;\n    await notifyAdmin(subjectAdmin, htmlAdmin).catch(() => {});\n\n    return NextResponse.json({ ok: true, id: pay.id });\n  } catch (e: any) {\n    console.error(\"crypto/confirm failed:\", e?.message || e);\n    return NextResponse.json({ error: \"Internal error\" }, { status: 500 });\n  }\n}\n"
    },
    {
      "path": "app/DEV_NOTES__assistant.md",
      "content_update": "regex",
      "updates": [
        {
          "pattern": "$",
          "replacement": "\\n[2025-10-23 10:21:24] API fix: removed txRef from cryptoPayment.create (schema doesn't have this column).\\n"
        }
      ]
    }
  ]
}