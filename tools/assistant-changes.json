{
  "description": "Account: add favorite modal with AddressAutocomplete + 'Book a new ride' button in History tab.",
  "files": [
    {
      "path": "components/account-client.tsx",
      "content": "\"use client\";\nimport { useEffect, useState } from 'react';\nimport AddressAutocomplete, { type Suggestion } from '@/components/address-autocomplete';\n\ntype Me = { id:number; email:string; emailVerified:boolean; firstName:string; lastName:string; phone:string; street:string; houseNumber:string; postalCode:string; city:string } | null;\n\ntype Ride = { id:number; pickupAddress:string; dropoffAddress:string; pickupTime:string; price:number; status:string };\n\ntype Fav = { id:number; label:string; address:string; lat:number|null; lon:number|null };\n\ntype Tab = 'profile'|'history'|'favorites';\n\nfunction TabButton({active, children, onClick}:{active:boolean; children:React.ReactNode; onClick:()=>void}){\n  return <button onClick={onClick} className={`px-4 py-2 rounded-2xl border ${active? 'bg-black text-white border-black':'bg-white text-black'}`}>{children}</button>;\n}\n\nfunction Field({label, children}:{label:string; children:React.ReactNode}){\n  return (\n    <div className=\"grid gap-1\">\n      <div className=\"text-sm text-gray-700\">{label}</div>\n      {children}\n    </div>\n  );\n}\n\nfunction Modal({ open, onClose, title, children }:{ open:boolean; onClose:()=>void; title:string; children:React.ReactNode }){\n  if(!open) return null;\n  return (\n    <div className=\"fixed inset-0 z-50\">\n      <div className=\"absolute inset-0 bg-black/30\" onClick={onClose}/>\n      <div className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 w-[92vw] max-w-md rounded-2xl bg-white border shadow-xl p-4\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <div className=\"text-lg font-semibold\">{title}</div>\n          <button onClick={onClose} aria-label=\"Close\" className=\"px-2 py-1 text-sm rounded border\">✕</button>\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nexport default function AccountClient(){\n  const [tab, setTab] = useState<Tab>(()=>{\n    if (typeof window === 'undefined') return 'profile';\n    const u = new URL(window.location.href); const t = u.searchParams.get('tab');\n    return (t==='history'||t==='favorites')? (t as Tab) : 'profile';\n  });\n  useEffect(()=>{ if(typeof window==='undefined') return; const u = new URL(window.location.href); u.searchParams.set('tab', tab); history.replaceState(null, '', u.toString()); },[tab]);\n\n  const [me, setMe] = useState<Me>(null);\n  const [saving, setSaving] = useState(false);\n  const [rides, setRides] = useState<Ride[]>([]);\n  const [favs, setFavs] = useState<Fav[]>([]);\n  const [msg, setMsg] = useState<string| null>(null);\n\n  // Add Favorite modal state\n  const [addFavOpen, setAddFavOpen] = useState(false);\n  const [favLabel, setFavLabel] = useState('');\n  const [favAddress, setFavAddress] = useState('');\n  const [favSel, setFavSel] = useState<Suggestion | null>(null);\n\n  useEffect(()=>{ (async()=>{\n    try{ const r = await fetch('/api/profile', { cache:'no-store' }); if(r.ok){ const j = await r.json(); setMe(j.me); } }catch{}\n  })(); },[]);\n\n  useEffect(()=>{ if(tab!=='history') return; (async()=>{ try{ const r = await fetch('/api/bookings',{cache:'no-store'}); if(r.ok){ const j=await r.json(); setRides(j.rides||[]);} }catch{} })(); },[tab]);\n  useEffect(()=>{ if(tab!=='favorites') return; (async()=>{ try{ const r = await fetch('/api/favorites',{cache:'no-store'}); if(r.ok){ const j=await r.json(); setFavs(j.items||[]);} }catch{} })(); },[tab]);\n\n  async function saveProfile(){\n    try{ if(!me) return; setSaving(true); setMsg(null);\n      const r = await fetch('/api/profile', { method:'PUT', headers:{'Content-Type':'application/json'}, body: JSON.stringify(me) });\n      const j = await r.json();\n      if(!r.ok || !j?.ok) throw new Error(j?.error||'Save failed');\n      setMsg('Profile saved');\n    }catch(e:any){ setMsg(e?.message||'Save failed'); }\n    finally{ setSaving(false); }\n  }\n\n  async function updateFav(row: Fav){\n    const r = await fetch('/api/favorites', { method:'PATCH', headers:{'Content-Type':'application/json'}, body: JSON.stringify(row) });\n    const j = await r.json(); if(j?.ok){ setFavs(prev=> prev.map(x=> x.id===row.id? j.item: x)); }\n  }\n  async function deleteFav(id:number){\n    const r = await fetch(`/api/favorites?id=${id}`, { method:'DELETE' });\n    const j = await r.json(); if(j?.ok){ setFavs(prev=> prev.filter(x=> x.id!==id)); }\n  }\n\n  async function createFav(){\n    try{\n      const address = (favSel?.text || favAddress).trim();\n      const label = favLabel.trim() || 'Favorite';\n      if(!address) return;\n      const res = await fetch('/api/favorites', { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ label, address, lat: favSel?.lat ?? null, lon: favSel?.lon ?? null }) });\n      const j = await res.json();\n      if(j?.ok){\n        setFavs(prev => [j.item, ...prev]);\n        setAddFavOpen(false); setFavLabel(''); setFavAddress(''); setFavSel(null);\n      }\n    }catch{}\n  }\n\n  if(me===null){ return <div className=\"max-w-5xl mx-auto p-4\">Loading…</div>; }\n  if(!me){ return <div className=\"max-w-5xl mx-auto p-4\"><div className=\"p-3 rounded-xl border bg-yellow-50\">Please login to view your account.</div></div>; }\n\n  return (\n    <div className=\"max-w-5xl mx-auto p-4 grid gap-6\">\n      <h1 className=\"text-3xl font-bold\">Account</h1>\n      <div className=\"flex gap-2\">\n        <TabButton active={tab==='profile'} onClick={()=> setTab('profile')}>Profile</TabButton>\n        <TabButton active={tab==='history'} onClick={()=> setTab('history')}>History</TabButton>\n        <TabButton active={tab==='favorites'} onClick={()=> setTab('favorites')}>Favorites</TabButton>\n      </div>\n\n      {tab==='profile' && (\n        <div className=\"grid gap-4 bg-white border rounded-2xl p-4\">\n          {!me.emailVerified && <div className=\"p-2 rounded-lg text-sm bg-orange-50 text-orange-900 border\">Your email is not verified.</div>}\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <Field label=\"First name\"><input value={me.firstName} onChange={e=> setMe({...me!, firstName:e.target.value})} className=\"px-3 py-2 rounded-xl border bg-white\"/></Field>\n            <Field label=\"Last name\"><input value={me.lastName} onChange={e=> setMe({...me!, lastName:e.target.value})} className=\"px-3 py-2 rounded-xl border bg-white\"/></Field>\n            <Field label=\"Email\"><input value={me.email} onChange={e=> setMe({...me!, email:e.target.value})} className=\"px-3 py-2 rounded-xl border bg-white\"/></Field>\n            <Field label=\"Phone\"><input value={me.phone} onChange={e=> setMe({...me!, phone:e.target.value})} className=\"px-3 py-2 rounded-xl border bg-white\"/></Field>\n            <Field label=\"Street\"><input value={me.street} onChange={e=> setMe({...me!, street:e.target.value})} className=\"px-3 py-2 rounded-xl border bg-white\"/></Field>\n            <Field label=\"House no.\"><input value={me.houseNumber} onChange={e=> setMe({...me!, houseNumber:e.target.value})} className=\"px-3 py-2 rounded-xl border bg-white\"/></Field>\n            <Field label=\"Postal code\"><input value={me.postalCode} onChange={e=> setMe({...me!, postalCode:e.target.value})} className=\"px-3 py-2 rounded-xl border bg-white\"/></Field>\n            <Field label=\"City\"><input value={me.city} onChange={e=> setMe({...me!, city:e.target.value})} className=\"px-3 py-2 rounded-xl border bg-white\"/></Field>\n          </div>\n          <div className=\"flex items-center gap-3\">\n            <button disabled={saving} onClick={saveProfile} className={`px-4 py-2 rounded-2xl ${saving?'bg-gray-300 text-gray-600':'bg-black text-white'}`}>Save</button>\n            {msg && <span className=\"text-sm text-gray-600\">{msg}</span>}\n          </div>\n        </div>\n      )}\n\n      {tab==='history' && (\n        <div className=\"grid gap-3\">\n          <div>\n            <a href=\"/book\" className=\"inline-block px-4 py-2 rounded-2xl bg-black text-white\">Book a new ride</a>\n          </div>\n          <div className=\"bg-white border rounded-2xl overflow-x-auto\">\n            <table className=\"w-full text-sm\">\n              <thead>\n                <tr className=\"bg-gray-50 text-left\">\n                  <th className=\"p-3\">#</th>\n                  <th className=\"p-3\">Pickup</th>\n                  <th className=\"p-3\">Dropoff</th>\n                  <th className=\"p-3\">Time</th>\n                  <th className=\"p-3\">Price</th>\n                  <th className=\"p-3\">Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {rides.map(r=> (\n                  <tr key={r.id} className=\"border-t\">\n                    <td className=\"p-3\">{r.id}</td>\n                    <td className=\"p-3\">{r.pickupAddress}</td>\n                    <td className=\"p-3\">{r.dropoffAddress}</td>\n                    <td className=\"p-3\">{new Date(r.pickupTime).toLocaleString()}</td>\n                    <td className=\"p-3\">{r.price} DKK</td>\n                    <td className=\"p-3 uppercase text-xs\">{r.status}</td>\n                  </tr>\n                ))}\n                {rides.length===0 && (<tr><td className=\"p-4\" colSpan={6}>No rides yet.</td></tr>)}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {tab==='favorites' && (\n        <div className=\"grid gap-3\">\n          <div>\n            <button onClick={()=>{ setAddFavOpen(true); setFavLabel(''); setFavAddress(''); setFavSel(null); }} className=\"px-4 py-2 rounded-2xl border\">Add favorite</button>\n          </div>\n          <div className=\"bg-white border rounded-2xl overflow-x-auto\">\n            <table className=\"w-full text-sm\">\n              <thead>\n                <tr className=\"bg-gray-50 text-left\">\n                  <th className=\"p-3\">Label</th>\n                  <th className=\"p-3\">Address</th>\n                  <th className=\"p-3\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {favs.map(f=> (\n                  <tr key={f.id} className=\"border-t\">\n                    <td className=\"p-3\"><input defaultValue={f.label} onChange={e=> f.label=e.target.value} className=\"px-2 py-1 border rounded\"/></td>\n                    <td className=\"p-3\"><input defaultValue={f.address} onChange={e=> f.address=e.target.value} className=\"px-2 py-1 border rounded w-[30rem] max-w-full\"/></td>\n                    <td className=\"p-3 flex gap-2\">\n                      <button className=\"px-3 py-1 rounded border\" onClick={()=> updateFav(f)}>Save</button>\n                      <button className=\"px-3 py-1 rounded border\" onClick={()=> deleteFav(f.id)}>Delete</button>\n                    </td>\n                  </tr>\n                ))}\n                {favs.length===0 && (<tr><td className=\"p-4\" colSpan={3}>No favorites yet.</td></tr>)}\n              </tbody>\n            </table>\n          </div>\n\n          <Modal open={addFavOpen} onClose={()=> setAddFavOpen(false)} title=\"Add favorite\">\n            <div className=\"grid gap-3\">\n              <Field label=\"Label\">\n                <input value={favLabel} onChange={e=> setFavLabel(e.target.value)} placeholder=\"e.g. Home, Work\" className=\"px-3 py-2 rounded-xl border bg-white\"/>\n              </Field>\n              <div className=\"grid gap-1\">\n                <div className=\"text-sm text-gray-700\">Address</div>\n                <AddressAutocomplete label=\" \" name=\"favAddress\" value={favSel? favSel.text : favAddress} onChange={v=>{ setFavAddress(v); setFavSel(null); }} onSelect={(s)=>{ setFavSel(s); }}/>\n              </div>\n              <div className=\"flex items-center justify-end gap-2\">\n                <button onClick={()=> setAddFavOpen(false)} className=\"px-3 py-2 rounded-xl border\">Cancel</button>\n                <button onClick={createFav} className=\"px-3 py-2 rounded-xl bg-black text-white\">Save</button>\n              </div>\n            </div>\n          </Modal>\n        </div>\n      )}\n    </div>\n  );\n}\n"
    }
  ]
}
