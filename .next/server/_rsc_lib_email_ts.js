"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_lib_email_ts";
exports.ids = ["_rsc_lib_email_ts"];
exports.modules = {

/***/ "(rsc)/./lib/email.ts":
/*!**********************!*\
  !*** ./lib/email.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendEmail: () => (/* binding */ sendEmail)\n/* harmony export */ });\n/* harmony import */ var nodemailer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nodemailer */ \"(rsc)/./node_modules/nodemailer/lib/nodemailer.js\");\n\nasync function trySend(opts) {\n    const { host, port, user, pass, from, to, subject, html, secure, requireTLS } = opts;\n    const transporter = nodemailer__WEBPACK_IMPORTED_MODULE_0__.createTransport({\n        host,\n        port,\n        secure,\n        auth: {\n            user,\n            pass\n        },\n        requireTLS: requireTLS ?? false,\n        logger: true // يطبع تفاصيل في السيرفر\n    }, {\n        from\n    });\n    try {\n        await transporter.verify();\n    } catch (e) {\n        console.error(\"[MAIL] verify failed\", {\n            host,\n            port,\n            secure,\n            requireTLS,\n            code: e?.code,\n            msg: e?.message\n        });\n        return {\n            ok: false,\n            error: \"VERIFY_FAIL\",\n            detail: e?.message\n        };\n    }\n    try {\n        const info = await transporter.sendMail({\n            to,\n            subject,\n            html\n        });\n        console.log(\"[MAIL] sent\", {\n            messageId: info.messageId,\n            host,\n            port\n        });\n        return {\n            ok: true\n        };\n    } catch (e) {\n        console.error(\"[MAIL] send failed\", {\n            host,\n            port,\n            code: e?.code,\n            msg: e?.message\n        });\n        return {\n            ok: false,\n            error: e?.code || \"SEND_FAIL\",\n            detail: e?.message\n        };\n    }\n}\nasync function sendEmail(to, subject, html) {\n    const host = process.env.SMTP_HOST || \"\";\n    const port = Number(process.env.SMTP_PORT || \"465\");\n    const user = process.env.SMTP_USER || \"\";\n    const pass = process.env.SMTP_PASS || \"\";\n    // اجعل FROM يطابق المستخدم إن لم يكن Alias مصرح به\n    const envFrom = process.env.SMTP_FROM || user;\n    const from = envFrom.includes(\"@\") ? envFrom : user;\n    // المحاولة الأولى: حسب الإعدادات (465→secure=true أو 587→secure=false)\n    const primary = await trySend({\n        host,\n        port,\n        user,\n        pass,\n        from,\n        to,\n        subject,\n        html,\n        secure: port === 465,\n        requireTLS: port === 587\n    });\n    if (primary.ok) return primary;\n    // إن فشل بسبب TLS/اتصال، جرّب تلقائياً 587/STARTTLS\n    if (port === 465) {\n        console.warn(\"[MAIL] primary failed on 465, retrying on 587/STARTTLS\");\n        const fallback = await trySend({\n            host,\n            port: 587,\n            user,\n            pass,\n            from,\n            to,\n            subject,\n            html,\n            secure: false,\n            requireTLS: true\n        });\n        return fallback;\n    }\n    return primary;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZW1haWwudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0M7QUFJcEMsZUFBZUMsUUFBUUMsSUFBc0o7SUFDM0ssTUFBTSxFQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsRUFBRSxFQUFFQyxPQUFPLEVBQUVDLElBQUksRUFBRUMsTUFBTSxFQUFFQyxVQUFVLEVBQUUsR0FBR1Y7SUFDaEYsTUFBTVcsY0FBY2IsdURBQTBCLENBQUM7UUFDN0NHO1FBQ0FDO1FBQ0FPO1FBQ0FJLE1BQU07WUFBRVY7WUFBTUM7UUFBSztRQUNuQk0sWUFBWUEsY0FBYztRQUMxQkksUUFBUSxLQUFnQix5QkFBeUI7SUFDbkQsR0FBRztRQUFFVDtJQUFLO0lBRVYsSUFBSTtRQUNGLE1BQU1NLFlBQVlJLE1BQU07SUFDMUIsRUFBRSxPQUFPQyxHQUFRO1FBQ2ZDLFFBQVFDLEtBQUssQ0FBQyx3QkFBd0I7WUFBRWpCO1lBQU1DO1lBQU1PO1lBQVFDO1lBQVlTLE1BQU1ILEdBQUdHO1lBQU1DLEtBQUtKLEdBQUdLO1FBQVE7UUFDdkcsT0FBTztZQUFFQyxJQUFHO1lBQU9KLE9BQU07WUFBZUssUUFBUVAsR0FBR0s7UUFBUTtJQUM3RDtJQUVBLElBQUk7UUFDRixNQUFNRyxPQUFPLE1BQU1iLFlBQVljLFFBQVEsQ0FBQztZQUFFbkI7WUFBSUM7WUFBU0M7UUFBSztRQUM1RFMsUUFBUVMsR0FBRyxDQUFDLGVBQWU7WUFBRUMsV0FBV0gsS0FBS0csU0FBUztZQUFFMUI7WUFBTUM7UUFBSztRQUNuRSxPQUFPO1lBQUVvQixJQUFHO1FBQUs7SUFDbkIsRUFBRSxPQUFPTixHQUFRO1FBQ2ZDLFFBQVFDLEtBQUssQ0FBQyxzQkFBc0I7WUFBRWpCO1lBQU1DO1lBQU1pQixNQUFNSCxHQUFHRztZQUFNQyxLQUFLSixHQUFHSztRQUFRO1FBQ2pGLE9BQU87WUFBRUMsSUFBRztZQUFPSixPQUFPRixHQUFHRyxRQUFRO1lBQWFJLFFBQVFQLEdBQUdLO1FBQVE7SUFDdkU7QUFDRjtBQUVPLGVBQWVPLFVBQVV0QixFQUFVLEVBQUVDLE9BQWUsRUFBRUMsSUFBWTtJQUN2RSxNQUFNUCxPQUFPNEIsUUFBUUMsR0FBRyxDQUFDQyxTQUFTLElBQUk7SUFDdEMsTUFBTTdCLE9BQU84QixPQUFPSCxRQUFRQyxHQUFHLENBQUNHLFNBQVMsSUFBSTtJQUM3QyxNQUFNOUIsT0FBTzBCLFFBQVFDLEdBQUcsQ0FBQ0ksU0FBUyxJQUFJO0lBQ3RDLE1BQU05QixPQUFPeUIsUUFBUUMsR0FBRyxDQUFDSyxTQUFTLElBQUk7SUFDdEMsbURBQW1EO0lBQ25ELE1BQU1DLFVBQVVQLFFBQVFDLEdBQUcsQ0FBQ08sU0FBUyxJQUFJbEM7SUFDekMsTUFBTUUsT0FBTytCLFFBQVFFLFFBQVEsQ0FBQyxPQUFPRixVQUFVakM7SUFFL0MsdUVBQXVFO0lBQ3ZFLE1BQU1vQyxVQUFzQixNQUFNeEMsUUFBUTtRQUN4Q0U7UUFBTUM7UUFBTUM7UUFBTUM7UUFBTUM7UUFBTUM7UUFBSUM7UUFBU0M7UUFDM0NDLFFBQVFQLFNBQVM7UUFDakJRLFlBQVlSLFNBQVM7SUFDdkI7SUFDQSxJQUFJcUMsUUFBUWpCLEVBQUUsRUFBRSxPQUFPaUI7SUFFdkIsb0RBQW9EO0lBQ3BELElBQUlyQyxTQUFTLEtBQUs7UUFDaEJlLFFBQVF1QixJQUFJLENBQUM7UUFDYixNQUFNQyxXQUFXLE1BQU0xQyxRQUFRO1lBQzdCRTtZQUFNQyxNQUFNO1lBQUtDO1lBQU1DO1lBQU1DO1lBQU1DO1lBQUlDO1lBQVNDO1lBQ2hEQyxRQUFRO1lBQU9DLFlBQVk7UUFDN0I7UUFDQSxPQUFPK0I7SUFDVDtJQUVBLE9BQU9GO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly85NDQtdHJhZmlrLy4vbGliL2VtYWlsLnRzPzgyODEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG5vZGVtYWlsZXIgZnJvbSAnbm9kZW1haWxlcic7XG5cbnR5cGUgU2VuZFJlc3VsdCA9IHsgb2s6IHRydWUgfSB8IHsgb2s6IGZhbHNlOyBlcnJvcjogc3RyaW5nOyBkZXRhaWw/OiBzdHJpbmcgfTtcblxuYXN5bmMgZnVuY3Rpb24gdHJ5U2VuZChvcHRzOiB7IGhvc3Q6c3RyaW5nOyBwb3J0Om51bWJlcjsgdXNlcjpzdHJpbmc7IHBhc3M6c3RyaW5nOyBmcm9tOnN0cmluZzsgdG86c3RyaW5nOyBzdWJqZWN0OnN0cmluZzsgaHRtbDpzdHJpbmc7IHNlY3VyZTpib29sZWFuOyByZXF1aXJlVExTPzpib29sZWFuIH0pOiBQcm9taXNlPFNlbmRSZXN1bHQ+IHtcbiAgY29uc3QgeyBob3N0LCBwb3J0LCB1c2VyLCBwYXNzLCBmcm9tLCB0bywgc3ViamVjdCwgaHRtbCwgc2VjdXJlLCByZXF1aXJlVExTIH0gPSBvcHRzO1xuICBjb25zdCB0cmFuc3BvcnRlciA9IG5vZGVtYWlsZXIuY3JlYXRlVHJhbnNwb3J0KHtcbiAgICBob3N0LFxuICAgIHBvcnQsXG4gICAgc2VjdXJlLCAgICAgICAgICAgICAgICAgLy8gNDY1PXRydWUsIDU4Nz1mYWxzZVxuICAgIGF1dGg6IHsgdXNlciwgcGFzcyB9LFxuICAgIHJlcXVpcmVUTFM6IHJlcXVpcmVUTFMgPz8gZmFsc2UsXG4gICAgbG9nZ2VyOiB0cnVlICAgICAgICAgICAgLy8g2YrYt9io2Lkg2KrZgdin2LXZitmEINmB2Yog2KfZhNiz2YrYsdmB2LFcbiAgfSwgeyBmcm9tIH0pO1xuXG4gIHRyeSB7XG4gICAgYXdhaXQgdHJhbnNwb3J0ZXIudmVyaWZ5KCk7XG4gIH0gY2F0Y2ggKGU6IGFueSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1tNQUlMXSB2ZXJpZnkgZmFpbGVkJywgeyBob3N0LCBwb3J0LCBzZWN1cmUsIHJlcXVpcmVUTFMsIGNvZGU6IGU/LmNvZGUsIG1zZzogZT8ubWVzc2FnZSB9KTtcbiAgICByZXR1cm4geyBvazpmYWxzZSwgZXJyb3I6J1ZFUklGWV9GQUlMJywgZGV0YWlsOiBlPy5tZXNzYWdlIH07XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IGluZm8gPSBhd2FpdCB0cmFuc3BvcnRlci5zZW5kTWFpbCh7IHRvLCBzdWJqZWN0LCBodG1sIH0pO1xuICAgIGNvbnNvbGUubG9nKCdbTUFJTF0gc2VudCcsIHsgbWVzc2FnZUlkOiBpbmZvLm1lc3NhZ2VJZCwgaG9zdCwgcG9ydCB9KTtcbiAgICByZXR1cm4geyBvazp0cnVlIH07XG4gIH0gY2F0Y2ggKGU6IGFueSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1tNQUlMXSBzZW5kIGZhaWxlZCcsIHsgaG9zdCwgcG9ydCwgY29kZTogZT8uY29kZSwgbXNnOiBlPy5tZXNzYWdlIH0pO1xuICAgIHJldHVybiB7IG9rOmZhbHNlLCBlcnJvcjogZT8uY29kZSB8fCAnU0VORF9GQUlMJywgZGV0YWlsOiBlPy5tZXNzYWdlIH07XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNlbmRFbWFpbCh0bzogc3RyaW5nLCBzdWJqZWN0OiBzdHJpbmcsIGh0bWw6IHN0cmluZyk6IFByb21pc2U8U2VuZFJlc3VsdD4ge1xuICBjb25zdCBob3N0ID0gcHJvY2Vzcy5lbnYuU01UUF9IT1NUIHx8ICcnO1xuICBjb25zdCBwb3J0ID0gTnVtYmVyKHByb2Nlc3MuZW52LlNNVFBfUE9SVCB8fCAnNDY1Jyk7XG4gIGNvbnN0IHVzZXIgPSBwcm9jZXNzLmVudi5TTVRQX1VTRVIgfHwgJyc7XG4gIGNvbnN0IHBhc3MgPSBwcm9jZXNzLmVudi5TTVRQX1BBU1MgfHwgJyc7XG4gIC8vINin2KzYudmEIEZST00g2YrYt9in2KjZgiDYp9mE2YXYs9iq2K7Yr9mFINil2YYg2YTZhSDZitmD2YYgQWxpYXMg2YXYtdix2K0g2KjZh1xuICBjb25zdCBlbnZGcm9tID0gcHJvY2Vzcy5lbnYuU01UUF9GUk9NIHx8IHVzZXI7XG4gIGNvbnN0IGZyb20gPSBlbnZGcm9tLmluY2x1ZGVzKCdAJykgPyBlbnZGcm9tIDogdXNlcjtcblxuICAvLyDYp9mE2YXYrdin2YjZhNipINin2YTYo9mI2YTZiTog2K3Ys9ioINin2YTYpdi52K/Yp9iv2KfYqiAoNDY14oaSc2VjdXJlPXRydWUg2KPZiCA1ODfihpJzZWN1cmU9ZmFsc2UpXG4gIGNvbnN0IHByaW1hcnk6IFNlbmRSZXN1bHQgPSBhd2FpdCB0cnlTZW5kKHtcbiAgICBob3N0LCBwb3J0LCB1c2VyLCBwYXNzLCBmcm9tLCB0bywgc3ViamVjdCwgaHRtbCxcbiAgICBzZWN1cmU6IHBvcnQgPT09IDQ2NSxcbiAgICByZXF1aXJlVExTOiBwb3J0ID09PSA1ODdcbiAgfSk7XG4gIGlmIChwcmltYXJ5Lm9rKSByZXR1cm4gcHJpbWFyeTtcblxuICAvLyDYpdmGINmB2LTZhCDYqNiz2KjYqCBUTFMv2KfYqti12KfZhNiMINis2LHZkdioINiq2YTZgtin2KbZitin2YsgNTg3L1NUQVJUVExTXG4gIGlmIChwb3J0ID09PSA0NjUpIHtcbiAgICBjb25zb2xlLndhcm4oJ1tNQUlMXSBwcmltYXJ5IGZhaWxlZCBvbiA0NjUsIHJldHJ5aW5nIG9uIDU4Ny9TVEFSVFRMUycpO1xuICAgIGNvbnN0IGZhbGxiYWNrID0gYXdhaXQgdHJ5U2VuZCh7XG4gICAgICBob3N0LCBwb3J0OiA1ODcsIHVzZXIsIHBhc3MsIGZyb20sIHRvLCBzdWJqZWN0LCBodG1sLFxuICAgICAgc2VjdXJlOiBmYWxzZSwgcmVxdWlyZVRMUzogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBmYWxsYmFjaztcbiAgfVxuXG4gIHJldHVybiBwcmltYXJ5O1xufVxuIl0sIm5hbWVzIjpbIm5vZGVtYWlsZXIiLCJ0cnlTZW5kIiwib3B0cyIsImhvc3QiLCJwb3J0IiwidXNlciIsInBhc3MiLCJmcm9tIiwidG8iLCJzdWJqZWN0IiwiaHRtbCIsInNlY3VyZSIsInJlcXVpcmVUTFMiLCJ0cmFuc3BvcnRlciIsImNyZWF0ZVRyYW5zcG9ydCIsImF1dGgiLCJsb2dnZXIiLCJ2ZXJpZnkiLCJlIiwiY29uc29sZSIsImVycm9yIiwiY29kZSIsIm1zZyIsIm1lc3NhZ2UiLCJvayIsImRldGFpbCIsImluZm8iLCJzZW5kTWFpbCIsImxvZyIsIm1lc3NhZ2VJZCIsInNlbmRFbWFpbCIsInByb2Nlc3MiLCJlbnYiLCJTTVRQX0hPU1QiLCJOdW1iZXIiLCJTTVRQX1BPUlQiLCJTTVRQX1VTRVIiLCJTTVRQX1BBU1MiLCJlbnZGcm9tIiwiU01UUF9GUk9NIiwiaW5jbHVkZXMiLCJwcmltYXJ5Iiwid2FybiIsImZhbGxiYWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/email.ts\n");

/***/ })

};
;