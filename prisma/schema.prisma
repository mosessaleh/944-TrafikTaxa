generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// === Enums ===

enum Role {
  USER
  ADMIN
}

enum RideStatus {
  PENDING
  CONFIRMED
  DISPATCHED
  ONGOING
  COMPLETED
  CANCELED
}

enum VehicleKey {
  SEDAN5
  SEVEN_NO_BAG
  VAN
  LIMO
}

// === Models ===

model User {
  id                  Int       @id @default(autoincrement())
  email               String    @unique
  hashedPassword      String
  firstName           String
  lastName            String
  phone               String
  street              String
  houseNumber         String
  postalCode          String
  city                String
  role                Role      @default(USER)
  emailVerified       Boolean   @default(false)
  emailVerifyCode     String?
  emailVerifyExpires  DateTime?
  pendingEmail        String?
  pendingEmailCode    String?
  pendingEmailExpires DateTime?
  resetToken          String?
  resetExpires        DateTime?
  createdAt           DateTime  @default(now())

  rides               Ride[]
  favorites           FavoriteAddress[]
}

model VehicleType {
  id         Int         @id @default(autoincrement())
  key        VehicleKey  @unique
  title      String
  capacity   Int         @default(4)
  active     Boolean     @default(true)
  // multiplier يضاعف السعر الأساسي (حسب قواعد النهار/الليل)
  multiplier Float       @default(1.0)
  note       String?

  rides      Ride[]
}

model FavoriteAddress {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  label     String
  address   String
  lat       Float?
  lon       Float?
  createdAt DateTime @default(now())

  @@index([userId])
}

model Ride {
  id            Int         @id @default(autoincrement())
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  riderName     String
  passengers    Int         @default(1)
  pickupAddress String
  dropoffAddress String
  scheduled     Boolean     @default(false)
  pickupTime    DateTime
  distanceKm    Float?
  durationMin   Int?
  price         Int
  status        RideStatus  @default(PENDING)
  paid          Boolean     @default(false)
  createdAt     DateTime    @default(now())

  vehicleType    VehicleType @relation(fields: [vehicleTypeId], references: [id])
  vehicleTypeId  Int

  @@index([userId])
  @@index([vehicleTypeId])
}
